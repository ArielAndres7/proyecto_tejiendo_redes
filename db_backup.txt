-- Escuelas
CREATE TABLE Escuelas (
    id_escuela INT AUTO_INCREMENT PRIMARY KEY,
    nombre_escuela VARCHAR(255) NOT NULL UNIQUE
);

-- Ciclos
CREATE TABLE Ciclos (
    id_ciclo INT AUTO_INCREMENT PRIMARY KEY,
    rango_anual VARCHAR(255) NOT NULL UNIQUE
);

-- Grados
CREATE TABLE Grados (
    id_grado INT AUTO_INCREMENT PRIMARY KEY,
    nivel_grado VARCHAR(10) NOT NULL UNIQUE,
    id_escuela INT,
    FOREIGN KEY (id_escuela) REFERENCES Escuelas(id_escuela)
);

-- Grupos
CREATE TABLE Grupos (
    id_grupo INT AUTO_INCREMENT PRIMARY KEY,
    nombre_grupo VARCHAR(10) NOT NULL,
    id_grado INT,
    FOREIGN KEY (id_grado) REFERENCES Grados(id_grado)
);

-- Estudiantes
CREATE TABLE Estudiantes (
    id_estudiante INT AUTO_INCREMENT PRIMARY KEY,
    nombre_completo VARCHAR(255) NOT NULL,
    nombre_canonico VARCHAR(255) NOT NULL,
    id_grupo INT,
    id_ciclo INT,
    FOREIGN KEY (id_grupo) REFERENCES Grupos(id_grupo),
    FOREIGN KEY (id_ciclo) REFERENCES Ciclos(id_ciclo)
);

-- PromedioTotal table
CREATE TABLE PromedioTotal (
    id_promedio INT AUTO_INCREMENT PRIMARY KEY,
	autodominio_inicial DECIMAL(5,2),
    automotivacion_inicial DECIMAL(5,2),
    autoconocimiento_inicial DECIMAL(5,2),
    autoestima_inicial DECIMAL(5,2),
    relaciones_interpersonales_inicial DECIMAL(5,2),
	autodominio_final DECIMAL(5,2),
    automotivacion_final DECIMAL(5,2),
    autoconocimiento_final DECIMAL(5,2),
    autoestima_final DECIMAL(5,2),
    relaciones_interpersonales_final DECIMAL(5,2)
);

-- Autonomia table
CREATE TABLE Autonomia (
    id_autonomia INT AUTO_INCREMENT PRIMARY KEY,
    autonomia_inicial DECIMAL(5,2),
    autonomia_final DECIMAL(5,2)
);

-- PerfilesEscolares
CREATE TABLE PerfilesEscolares (
    id_perfil_esc INT AUTO_INCREMENT PRIMARY KEY,
    id_escuela INT,
    id_ciclo INT,
    id_grado INT,
    id_grupo INT,
    autodominio_inicial DECIMAL(5,2),
    automotivacion_inicial DECIMAL(5,2),
    autoconocimiento_inicial DECIMAL(5,2),
    autoestima_inicial DECIMAL(5,2),
    relaciones_interpersonales_inicial DECIMAL(5,2),
	autodominio_final DECIMAL(5,2),
    automotivacion_final DECIMAL(5,2),
    autoconocimiento_final DECIMAL(5,2),
    autoestima_final DECIMAL(5,2),
    relaciones_interpersonales_final DECIMAL(5,2),
    id_promedio INT,
    id_autonomia INT,
    -- Agregar aquí otros campos relacionados con los perfiles escolares
    FOREIGN KEY (id_escuela) REFERENCES Escuelas(id_escuela),
    FOREIGN KEY (id_ciclo) REFERENCES Ciclos(id_ciclo),
    FOREIGN KEY (id_grado) REFERENCES Grados(id_grado),
    FOREIGN KEY (id_grupo) REFERENCES Grupos(id_grupo),
    FOREIGN KEY (id_promedio) REFERENCES PromedioTotal(id_promedio),
    FOREIGN KEY (id_autonomia) REFERENCES Autonomia(id_autonomia)
);

-- PerfilesEstudiantiles
CREATE TABLE PerfilesEstudiantiles (
    id_perfil_est INT AUTO_INCREMENT PRIMARY KEY,
    id_estudiante INT,
	id_perfil_esc INT,
	autodominio DECIMAL(5,2),
    automotivacion DECIMAL(5,2),
    autoconocimiento DECIMAL(5,2),
    autoestima DECIMAL(5,2),
    relaciones_interpersonales_sanas DECIMAL(5,2),
    -- Agregar aquí otros campos relacionados con los perfiles estudiantiles
    FOREIGN KEY (id_estudiante) REFERENCES Estudiantes(id_estudiante),
    FOREIGN KEY (id_perfil_esc) REFERENCES PerfilesEscolares(id_perfil_esc)
);
 -- FIN ARCHIVO PERFILES
 
 -- Analisis
CREATE TABLE Analisis (
    id_analisis INT AUTO_INCREMENT PRIMARY KEY,
    fecha DATE NOT NULL,
    id_escuela INT,
    id_grado INT,
    id_grupo INT,
    num_total_actores INT,
    actores_mapeados INT,
    num_relaciones INT,
    densidad DECIMAL(5,3),
    diametro INT,
    cercania DECIMAL(5,3),
    promedio_grado DECIMAL(5,3),
    FOREIGN KEY (id_escuela) REFERENCES Escuelas(id_escuela),
    FOREIGN KEY (id_grado) REFERENCES Grados(id_grado),
    FOREIGN KEY (id_grupo) REFERENCES Grupos(id_grupo)
);

-- ModularidadAux
CREATE TABLE ModularidadAux (
    id_modularidad INT AUTO_INCREMENT PRIMARY KEY,
    id_analisis INT,
    comunidades INT,
    miembros INT,
    FOREIGN KEY (id_analisis) REFERENCES Analisis(id_analisis)
);

-- GradoAux (for both entrada and salida)
CREATE TABLE GradoAux (
    id_grado_aux INT AUTO_INCREMENT PRIMARY KEY,
    id_analisis INT,
    estudiante VARCHAR(255),
    grado INT,
    tipo VARCHAR(50), -- This could be 'entrada' or 'salida'
    integracion VARCHAR(50), -- This could be 'más integrados' or 'menos integrados'
    FOREIGN KEY (id_analisis) REFERENCES Analisis(id_analisis)
);

-- AyudaPercibidaAux
CREATE TABLE AyudaPercibidaAux (
    id_ayuda INT AUTO_INCREMENT PRIMARY KEY,
    id_analisis INT,
    valor INT,
    porcentaje DECIMAL(5,2),
    FOREIGN KEY (id_analisis) REFERENCES Analisis(id_analisis)
);

-- ConfianzaPercibidaAux
CREATE TABLE ConfianzaPercibidaAux (
    id_confianza INT AUTO_INCREMENT PRIMARY KEY,
    id_analisis INT,
    valor INT,
    porcentaje DECIMAL(5,2),
    FOREIGN KEY (id_analisis) REFERENCES Analisis(id_analisis)
);
 -- FIN ARCHIVO ANALISIS

-- Servicios
CREATE TABLE Servicios (
    id_servicio INT AUTO_INCREMENT PRIMARY KEY,
    tipo VARCHAR(255) NOT NULL,
    modalidad VARCHAR(255) NOT NULL,
    fecha DATE NOT NULL,
    id_escuela INT,
    id_ciclo INT,
    id_grupo INT,
    FOREIGN KEY (id_escuela) REFERENCES Escuelas(id_escuela),
    FOREIGN KEY (id_ciclo) REFERENCES Ciclos(id_ciclo),
    FOREIGN KEY (id_grupo) REFERENCES Grupos(id_grupo)
);

-- ServicioEstudiantes (Linking table between Servicios and Estudiantes)
CREATE TABLE ServicioEstudiantes (
    id_servicio_estudiante INT AUTO_INCREMENT PRIMARY KEY,
    id_servicio INT,
    id_estudiante INT,
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio),
    FOREIGN KEY (id_estudiante) REFERENCES Estudiantes(id_estudiante)
);